#!/bin/bash
set -e

# trap keyboard interrupt (control-c)
trap control_c INT

# kernel.org git repo of firmware: http://git.kernel.org/cgit/linux/kernel/git/firmware/linux-firmware.git/tree/

INITRD="$1"
WORKING_DIR=/tmp/initrd
CURRENT_DIR="$(pwd -P)"

mkdir -p $WORKING_DIR

cleanup() {
  rm -rf $WORKING_DIR/*
  return $?
}

control_c() {
  # run if user hits control-c
  echo "Caught interupt. Cleaning up..."
  cleanup
  exit $?
}

main(){
  # this is now a thing: http://cdimage.debian.org/cdimage/unofficial/non-free/firmware/unstable/current/firmware.cpio.gz
  # cat initrd.gz $(wget -O- http://cdimage.debian.org/cdimage/unofficial/non-free/firmware/unstable/current/firmware.cpio.gz) > newinitrd.gz

  mkdir -p $WORKING_DIR

  ARCH="$1"
  DISTRO="$2"
  RELEASE="$3"
  HWE="$4"

  if [ "$DISTRO" == 'ubuntu' ] && [ "$HWE" == 'hwe' ]; then
    # Hardware enablement
    URL="http://mirror.cs.uchicago.edu/${DISTRO}/dists/${RELEASE}-updates/main/installer-${ARCH}/current/images/hwe-netboot/ubuntu-installer/${ARCH}"
  else
    URL="http://mirror.cs.uchicago.edu/${DISTRO}/dists/${RELEASE}/main/installer-${ARCH}/current/images/netboot/${DISTRO}-installer/${ARCH}"
  fi

  echo "Downloading firmware.cpio.gz..."
  if [ ${DISTRO} == 'debian' ]; then
    firmwareurl="http://cdimage.debian.org/cdimage/unofficial/non-free/firmware/${RELEASE}/current/firmware.cpio.gz"
  else
    firmwareurl="http://cdimage.debian.org/cdimage/unofficial/non-free/firmware/unstable/current/firmware.cpio.gz"
  fi
  wget -O $WORKING_DIR/firmware.cpio.gz -cq $firmwareurl

  echo "Downloading initrd.gz for ${DISTRO} ${RELEASE}..."
  wget -O $WORKING_DIR/${DISTRO}_${RELEASE}_initrd.gz -cq $URL/initrd.gz
  wget -O $WORKING_DIR/${DISTRO}_${RELEASE}_linux -cq $URL/linux

  echo "Adding firmware to initrd..."
  cat $WORKING_DIR/${DISTRO}_${RELEASE}_initrd.gz $WORKING_DIR/firmware.cpio.gz > $WORKING_DIR/${DISTRO}_${RELEASE}_additional_firmware_initrd.gz

  echo "Copying kernel, original initrd and the new initrd into the current directory..."
  cp $WORKING_DIR/${DISTRO}_${RELEASE}_additional_firmware_initrd.gz $PWD
  cp $WORKING_DIR/${DISTRO}_${RELEASE}_linux $PWD
  cp $WORKING_DIR/${DISTRO}_${RELEASE}_initrd.gz $PWD

  echo
  echo "To make these availabe you can run the following"
  echo
  echo "mv ${DISTRO}_${RELEASE}_linux ../${DISTRO}/${RELEASE}/amd64/non-free/linux"
  echo "mv ${DISTRO}_${RELEASE}_additional_firmware_initrd.gz ../${DISTRO}/${RELEASE}/amd64/non-free/initrd.gz"
  echo "chmod 644 ../${DISTRO}/${RELEASE}/amd64/non-free/*"
  echo

}

usage(){
  echo "Usage: $0 <ARCH> <DISTRO> <RELEASE> [hwe]"
  echo "  Downloads installation kernel, ramdisk, and non-free firmware."
  echo "  Injects non-free firmware into ramdisk."
  echo "  Produces 3 files: kernel, original ramdisk, ramdisk with non-free firmware."
}

if [ -z "$INITRD" ]; then
  usage
  exit
else
  cleanup
  main "$1" "$2" "$3"
  cleanup
fi
